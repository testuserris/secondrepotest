{
  "outputs":{

  },
  "variables":{

  },
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "functions":[

  ],
  "apiProfile":"",
  "resources":[
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_1",
      "type":"Microsoft.Compute/virtualMachines",
      "properties":{
        "storageProfile":{
          "osDisk":{
            "encryptionSettings":{
              "enabled":false
            }
          }
        },
        "osProfile":{
          "linuxConfiguration":{
            "disablePasswordAuthentication":false
          },
          "windowsConfiguration":{
            "enableAutomaticUpdates":false
          },
          "adminPassword": "PASSWORD"
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_2",
      "type":"Microsoft.Network/applicationGateways",
      "properties":{
        "webApplicationFirewallConfiguration":{
          "enabled":false
        }
      }
    },
    {
      "apiVersion":"2018-01-01",
      "name":"[variables('apiManagementServiceName')]",
      "location":"[parameters('location')]",
      "type":"Microsoft.ApiManagement/service",
      "sku":{
        "name":"[parameters('sku')]",
        "capacity":"[parameters('skuCount')]"
      },
      "properties":{
        "publisherName":"[parameters('publisherName')]",
        "hostnameConfigurations":[
          {
            "encodedCertificate":"[parameters('proxyCustomHostnameBase64EncodedPfxCertificate')]",
            "negotiateClientCertificate":false,
            "hostName":"[parameters('proxyCustomHostname')]",
            "type":"Proxy",
            "certificatePassword":"PASSWORD"
          },
          {
            "type": "Proxy",
            "hostName": "[parameters('proxyCustomHostname1')]",
            "encodedCertificate": "[parameters('proxyCustomHostnameBase64EncodedPfxCertificate1')]",
            "certificatePassword": "[parameters('proxySSLCertificatePassword1')]",
            "negotiateClientCertificate": false
          }
        ],
        "publisherEmail":"[parameters('publisherEmail')]"
      },
      "tags":{

      },
      "resources":[
        {
          "apiVersion":"2017-03-01",
          "type":"certificates",
          "name":"exampleCertificate",
          "dependsOn":[
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties":{
            "data":"[parameters('mutualAuthenticationCertificate')]",
            "password":"PASSWORD"
          }
        }
      ]
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_3",
      "type":"Microsoft.Storage/storageAccounts",
      "properties":{
        "encryption":{
          "services":{
            "blob":{
              "enabled":false
            },
            "file":{
              "enabled":false
            }
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_4",
      "type":"Microsoft.Sql/servers/auditingSettings",
      "properties":{
        "retentionDays":80
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_5",
      "type":"Microsoft.Sql/servers/databases/auditingSettings",
      "properties":{
        "retentionDays":80
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_6",
      "type":"Microsoft.Sql/servers/databases/securityAlertPolicies",
      "properties":{
        "disabledAlerts":[
          "Sql_Injection",
          "Data_Exfiltration"
        ],
        "retentionDays":80
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_7",
      "type":"Microsoft.Sql/servers/securityAlertPolicies",
      "properties":{
        "disabledAlerts":[
          "Sql_Injection_Vulnerability",
          "Access_Anomaly"
        ],
        "retentionDays":80
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_9",
      "type":"Microsoft.insights/activityLogAlerts",
      "properties":{
        "condition":{
          "allOf":[

          ]
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"resource_ref_",
      "resources":[
        {
          "name":"current",
          "type":"Microsoft.Sql/servers/databases/transparentDataEncryption",
          "properties":{
            "status":"Disabled"
          }
        }
      ],
      "type":"Microsoft.Sql/servers/databases",
      "properties":{
        "collations":"randomn string"
      }
    },
    {
      "name": "[concat(parameters('automationAccountName'), '/', variables('azureCredentials'))]",
      "type": "Microsoft.Automation/automationAccounts/credentials",
      "apiVersion": "2020-01-13-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
      ],
      "properties": {
        "description": "Azure Subscription Credentials",
        "password": "PASSWORD",
        "userName": "[parameters('azureAdmin')]"
      }
    },
    {
      "name":"[parameters('automationAccountName')]",
      "type":"Microsoft.Automation/automationAccounts",
      "apiVersion":"2015-10-31",
      "location":"[parameters('automationRegion')]",
      "dependsOn":[

      ],
      "tags":{

      },
      "properties":{
        "sku":{
          "name":"[parameters('automationPricingTier')]"
        }
      },
      "resources":[
        {
          "name":"[concat(parameters('automationAccountName'), '/', variables('automation').Asset.omsHypervReplicaRunAsAccount.name)]",
          "type":"Microsoft.Automation/automationAccounts/credentials",
          "apiVersion":"2015-10-31",
          "location":"[parameters('automationRegion')]",
          "dependsOn":[
            "[resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "tags":{

          },
          "properties":{
            "userName":"[parameters('onPremisesRunAsUserName')]",
            "password":"PASSWORD",
            "description":"[variables('automation').Asset.omsHypervReplicaRunAsAccount.description]"
          }
        }
      ]
    },
    {
      "name": "[variables('certname')]",
      "type": "Microsoft.Batch/batchAccounts/certificates",
      "apiVersion": "2019-04-01",
      "properties": {
        "format": "Pfx",
        "thumbprint": "[parameters('certthumbprint')]",
        "thumbprintAlgorithm": "SHA1",
        "data": "[parameters('certdata')]",
        "password": "PASSWORD"
      }
    },
    {
      "type": "Microsoft.Blockchain/blockchainMembers",
      "apiVersion": "2018-06-01-preview",
      "name": "[parameters('bcMemberName')]",
      "location": "[parameters('location')]",
      "tags": {
        "consortium": "Consortium"
      },
      "sku": {
        "name": "B0",
        "tier": "Basic"
      },
      "properties": {
        "protocol": "Quorum",
        "consensus": "Default",
        "password": "PASSWORD",
        "validatorNodesSku": {
          "capacity": 1
        },
        "consortium": "[concat('Consort', parameters('bcMemberName'))]",
        "consortiumManagementAccountPassword": "PASSWORD",
        "firewallRules": [
          {
            "ruleName": "AllowAll",
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        ]
      }
    },
    {
      "name":"[parameters('dbServerName')]",
      "type":"Microsoft.Sql/servers",
      "location":"[parameters('location')]",
      "apiVersion":"2014-04-01-preview",
      "properties":{
        "administratorLogin":"[parameters('dbAdministratorLogin')]",
        "administratorLoginPassword":"PASSWORD",
        "version":"12.0"
      },
      "resources":[
        {
          "name":"Import",
          "type":"Extensions",
          "apiVersion":"2014-04-01-preview",
          "dependsOn":[],
          "properties":{
            "administratorLoginPassword":"PASSWORD"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-02-01",
      "name": "[variables('umbracoAdminWebAppName')]",
      "type": "Microsoft.Web/Sites",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "empty"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
      ],
      "properties": {
        "name": "[variables('umbracoAdminWebAppName')]",
        "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/',resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
        "hostingEnvironment": ""
      },
      "resources": [
        {
          "apiVersion": "2014-06-01",
          "name": "MSDeploy",
          "type": "Extensions",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('umbracoAdminWebAppName'))]",
            "[concat('Microsoft.Web/Sites/',variables('umbracoAdminWebAppName'), '/config/web')]",
            "[concat('Microsoft.Sql/servers/', parameters('dbServerName'), '/databases/', parameters('dbName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
          ],
          "properties": {
            "packageUri": "https://auxmktplceprod.blob.core.windows.net/packages/ScalableUmbracoCms.WebPI.7.4.3.zip",
            "dbType": "SQL",
            "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('dbName'), ';User Id=', parameters('dbAdministratorLogin'), '@', parameters('dbServerName'), ';Password=', parameters('dbAdministratorLoginPassword'), ';')]",
            "setParameters": {
              "Application Path": "[variables('umbracoAdminWebAppName')]",
              "Database Server": "[reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName]",
              "Database Name": "[parameters('dbName')]",
              "Database Username": "[concat(parameters('nonAdminDatabaseUsername'),'admin')]",
              "Database Password": "PASSWORD",
              "Database Administrator": "[parameters('dbAdministratorLogin')]",
              "Database Administrator Password": "PASSWORD",
              "azurestoragerootUrl": "[concat('https://',variables('storageAccountName'), '.blob.core.windows.net')]",
              "azurestoragecontainerName": "media",
              "azurestorageconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';AccountKey=' , listKeys(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1 )]",
              "rediscachehost": "[concat(parameters('redisCacheName'), '.redis.cache.windows.net')]",
              "rediscacheport": "6379",
              "rediscacheaccessKey": "[listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')), '2014-04-01').primaryKey]",
              "azurestoragecacheControl": "*|public, max-age=31536000;js|no-cache"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2018-02-01",
          "comments": "This are the generated settings for the Sonar jdbc connectionstring",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
          ],
          "tags": {
            "displayName": "SonarappSettings"
          },
          "properties": {
            "SONARQUBE_JDBC_URL": "[concat('jdbc:mysql://',  reference(resourceId('Microsoft.DBforMySQL/servers',variables('serverName'))).fullyQualifiedDomainName , ':3306/',variables('databaseName'),'?verifyServerCertificate=true&useSSL=true&requireSSL=false&useUnicode=true&characterEncoding=utf8')]",
            "SONARQUBE_JDBC_USERNAME": "[variables('jdbcSonarUserName')]",
            "SONARQUBE_JDBC_PASSWORD": "PASSWORD"
          }
        }
      ]
    },
    {
      "name":"[variables('adPDCVMName')]",
      "type":"Microsoft.Compute/virtualMachines",
      "apiVersion":"2019-12-01",
      "location":"[parameters('location')]",
      "resources":[
        {
          "name": "CreateADForest",
          "type": "Extensions",
          "apiVersion": "2019-12-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('adPDCVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('adPDCModulesURL')]",
              "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
              "properties": {
                "DomainName": "[parameters('domainName')]",
                "connectionPassword": "PASSWORD"
              },
              "configurationArguments":{
                "nodeName":"[variables('vm1Name')]",
                "vmNumber":"vm1",
                "backendCert":"[parameters('backendCertData')]",
                "backendCertPw":"PASSWORD",
                "backendCertDnsName":"[parameters('backendCertDnsName')]",
                "webConfigPath":"[variables('webConfigFullPath')]",
                "defaultHtmPath":"[variables('vm1DefaultHtmFullPath')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "PASSWORD",
                "SAPassword": "PASSWORD"
              }
            }
          }
        }
      ]
    },
    {
      "name":"[concat(variables('generalSettings').vmSQLName,'/ConfigureSQLVM')]",
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "location":"[parameters('location')]",
      "apiVersion":"2019-03-01",
      "dependsOn":[
        "[resourceId('Microsoft.Compute/virtualMachines', variables('generalSettings').vmDCName)]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('generalSettings').vmDCName, 'ConfigureDCVM')]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('generalSettings').vmSQLName)]"
      ],
      "tags":{
        "displayName":"[concat(variables('generalSettings').vmSQLName,'/ConfigureSQLVM')]"
      },
      "properties":{
        "publisher":"Microsoft.Powershell",
        "type":"DSC",
        "typeHandlerVersion":"2.9",
        "autoUpgradeMinorVersion":true,
        "forceUpdateTag":"[variables('dscConfigureSQLVM').forceUpdateTag]",
        "settings":{
          "wmfVersion":"latest",
          "configuration":{
            "url":"[variables('dscConfigureSQLVM').scriptFileUri]",
            "script":"[variables('dscConfigureSQLVM').script]",
            "function":"[variables('dscConfigureSQLVM').function]"
          },
          "privacy":{
            "dataCollection":"enable"
          },
          "properties": {
            "azureAccountPassword": "PASSWORD",
            "VMAdminPassword": "PASSWORD"
          },
          "configurationArguments":{
            "nodeName":"[variables('vm1Name')]",
            "vmNumber":"vm1",
            "backendCert":"[parameters('backendCertData')]",
            "backendCertPw":"PASSWORD",
            "backendCertDnsName":"[parameters('backendCertDnsName')]",
            "webConfigPath":"[variables('webConfigFullPath')]",
            "defaultHtmPath":"[variables('vm1DefaultHtmFullPath')]"
          }
        },
        "protectedSettings":{
          "Password": "PASSWORD",
          "password": "PASSWORD",
          "environment":{
            "MYSQL_ROOT_PASSWORD":"ubuntu"
          },
          "configurationArguments":{
            "DomainAdminCreds":{
              "UserName":"[parameters('adminUsername')]",
              "Password":"PASSWORD"
            },
            "SqlSvcCreds":{
              "UserName":"[variables('generalSettings').sqlSvcUserName]",
              "Password":"PASSWORD"
            },
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PASSWORD"
            },
            "AdfsSvcCreds": {
              "UserName": "[variables('generalSettings').adfsSvcUserName]",
              "Password": "PASSWORD"
            },
            "SPFarmCreds": {
              "UserName": "[variables('generalSettings').spFarmUserName]",
              "Password": "[variables('generalSettings').spFarmPassword]"
            },
            "SPSvcCreds": {
              "UserName": "[variables('generalSettings').spSvcUserName]",
              "Password": "[variables('generalSettings').spSvcPassword]"
            },
            "SPAppPoolCreds": {
              "UserName": "[variables('generalSettings').spAppPoolUserName]",
              "Password": "[variables('generalSettings').spAppPoolPassword]"
            },
            "SPPassphraseCreds": {
              "UserName": "Passphrase",
              "Password": "[variables('generalSettings').spPassphrase]"
            },
            "SPSuperUserCreds": {
              "UserName": "[variables('generalSettings').spSuperUserName]",
              "Password": "[parameters('serviceAccountsPassword')]"
            },
            "SPSuperReaderCreds": {
              "UserName": "[variables('generalSettings').spSuperReaderName]",
              "Password": "[parameters('serviceAccountsPassword')]"
            }
          },
          "secret": "SECRET",
          "Items": {
            "AdminPassword": "PASSWORD",
            "SAPassword": "PASSWORD"
          },
          "PrivateKeyVaultCredentialSettings": {
            "AzureKeyVaultUrl": "[parameters('sqlAkvUrl')]",
            "ServicePrincipalName": "[parameters('sqlAkvPrincipalName')]",
            "ServicePrincipalSecret": "PASSWORD"
          },
          "AADClientSecret": "PASSWORD",
          "SQLAuthUpdatePassword": "PASSWORD"
        }
      }
    },
    {
      "type":"Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion":"2019-07-01",
      "name":"[parameters('vmssName')]",
      "tags":{},
      "dependsOn":[],
      "location":"[parameters('location')]",
      "sku":{},
      "properties":{
        "overprovision":false,
        "upgradePolicy":{},
        "virtualMachineProfile":{
          "storageProfile":{},
          "osProfile":{
            "computerNamePrefix":"[parameters('vmssName')]",
            "adminUsername":"[parameters('adminUsername')]",
            "adminPassword":"PASSWORD",
            "linuxConfiguration":{
              "disablePasswordAuthentication":true,
              "ssh":{
                "publicKeys":[
                  {
                    "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData":"[parameters('adminKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile":{},
          "extensionProfile":{}
        }
      }
    },
    {
      "apiVersion":"2017-03-30",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[parameters('vmName')]",
      "location":"[resourceGroup().location]",
      "tags":{},
      "dependsOn":[],
      "properties":{
        "hardwareProfile":{},
        "osProfile":{},
        "storageProfile":{},
        "networkProfile":{
          "networkInterfaces":[]
        }
      },
      "resources":[
        {
          "name":"DSCExt1",
          "type":"Extensions",
          "location":"[resourceGroup().location]",
          "apiVersion":"2015-05-01-preview",
          "dependsOn":[],
          "tags":{},
          "properties":{
            "publisher":"Microsoft.Powershell",
            "type":"DSC",
            "typeHandlerVersion":"2.19",
            "autoUpgradeMinorVersion":true,
            "settings":{
              "modulesUrl":"[parameters('modulesUrl')]",
              "configurationFunction":"ConfigureWebServer.ps1\\Main",
              "properties":{
                "SQLAdminAuthCreds": {
                  "userName": "[parameters('adminUsername')]",
                  "Password": "PASSWORD"
                  },
                "SQLAuthCreds": {
                  "userName": "[parameters('dbSAUserName')]",
                  "Password": "PASSWORD"
                },
                "MachineName":"[parameters('vmName')]",
                "WebDeployPackagePath":"[parameters('webdeploypkg')]",
                "UserName":"[parameters('adminUsername')]",
                "Password":"PASSWORD",
                "DbServerName":"[parameters('DatabaseServerName')]",
                "DbName":"[parameters('databaseName')]",
                "DbUserName":"[parameters('databaseServerAdminLogin')]",
                "DbPassword":"PASSWORD"
              }
            },
            "protectedSettings":{
              "SQLAuthUpdatePassword":"PASSWORD",
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PASSWORD"
                },
                "AdfsSvcCreds": {
                  "UserName": "[variables('generalSettings').adfsSvcUserName]",
                  "Password": "parameters("
                },
                "DomainAdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "[parameters('adminPassword')]"
                },
                "SPSetupCreds": {
                  "UserName": "[variables('generalSettings').spSetupUserName]",
                  "Password": "[variables('generalSettings').spSetupPassword]"
                },
                "SPFarmCreds": {
                  "UserName": "[variables('generalSettings').spFarmUserName]",
                  "Password": "[variables('generalSettings').spFarmPassword]"
                },
                "SPSvcCreds": {
                  "UserName": "[variables('generalSettings').spSvcUserName]",
                  "Password": "[variables('generalSettings').spSvcPassword]"
                },
                "SPAppPoolCreds": {
                  "UserName": "[variables('generalSettings').spAppPoolUserName]",
                  "Password": "[variables('generalSettings').spAppPoolPassword]"
                },
                "SPPassphraseCreds": {
                  "UserName": "Passphrase",
                  "Password": "[variables('generalSettings').spPassphrase]"
                },
                "SPSuperUserCreds": {
                  "UserName": "[variables('generalSettings').spSuperUserName]",
                  "Password": "[parameters('serviceAccountsPassword')]"
                },
                "SPSuperReaderCreds": {
                  "UserName": "[variables('generalSettings').spSuperReaderName]",
                  "Password": "[parameters('serviceAccountsPassword')]"
                }
              },
              "PrivateKeyVaultCredentialSettings": {
                "AzureKeyVaultUrl": "[parameters('sqlAkvUrl')]",
                "ServicePrincipalName": "[parameters('sqlAkvPrincipalName')]",
                "ServicePrincipalSecret": "PASSWORD"
              },
              "AADClientSecret": "PASSWORD"
            }
          }
        }
      ]
    },
    {
      "name": "mysql",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {},
        "parameters": {
          "customData": {
            "value": {
              "CONCOURSE_PASSWORD": "PASSWORD"
            }
          },
          "dnsName": {},
          "location": {},
          "vmUserName": {},
          "adminPassword": {
            "value": "PASSWORD"
          },
          "db_password": {
            "value": "PASSWORD"
          },
          "adminPasswordOrKey": {
            "value": "PASSWORD"
          },
          "authenticationType": {
            "value": "[parameters('adminPassword')]"
          },
          "mysqlRootPassword": {
            "value": "PASSWORD"
          },
          "mysqlReplicationPassword": {
            "value": "PASSWORD"
          },
          "mysqlProbePassword": {
            "value": "PASSWORD"
          },
          "sqlPassword": {
            "value": "PASSWORD"
          },
          "ansibleTowerAdminPassword": {
            "value": "PASSWORD"
          },
          "ansibleTowerDatabasePassword": {
            "value": "PASSWORD"
          },
          "aadClientSecret":{
            "value":"PASSWORD"
          },
          "openshiftPassword":{
            "value":"PASSWORD"
          },
          "rhelPassword":{
            "value":"PASSWORD"
          },
          "tempPassword":{
            "value":"PASSWORD"
          },
          "ocpassword":{
            "value":"PASSWORD"
          },
          "sshPrivateKey":{
            "reference":{
              "secretName":"PASSWORD"
            }
          },
          "spClientSecret": {
            "value": "PASSWORD"
          },
          "linuxAdminPassword": {
            "value": "PASSWORD"
          },
          "clientSecret": {
            "value": "PASSWORD"
          },
          "adminPasswordorSSHKey": {
            "value": "PASSWORD"
          },
          "sapadmPassword": {
            "value": "PASSWORD"
          },
          "glassfishAdminPassword": {
            "value": "PASSWORD"
          },
          "AzureClientSecret": {
            "value": "PASSWORD"
          },
          "mongoAdminPassword": {
            "value": "PASSWORD"
          },
          "mongoSSLCertPassword": {
            "value": "PASSWORD"
          },
          "DbAdminPassword": {
            "value": "PASSWORD"
          },
          "vmAdminPasswordOrPublicKeyTrendDSM": {
            "value": "PASSWORD"
          },
          "dsmAdminPassword": {
            "value": "PASSWORD"
          },
          "vmAdminPasswordOrPublicKeyOrchServer": {
            "value": "PASSWORD"
          },
          "vmAdminPasswordOrPublicKeyChefServer": {
            "value": "PASSWORD"
          },
          "chefUserPassword": {
            "value": "PASSWORD"
          },
          "adminPasswordDSAgentWindows": {
            "value": "PASSWORD"
          },
          "adminPasswordOrPublicKeyDSAgent": {
            "value": "PASSWORD"
          },
          "TenantActivationPassword": {
            "value": "PASSWORD"
          },
          "adminPasswordChefWorkstation": {
            "value": "PASSWORD"
          },
          "clusterLoginPassword": {
            "value": "PASSWORD"
          },
          "sshPassword": {
            "value": "PASSWORD"
          },
          "replicatorPassword": {
            "value": "PASSWORD"
          },
          "jenkinsAdminPassword": {
            "value": "PASSWORD"
          },
          "ucpAdminPassword": {
            "value": "PASSWORD"
          },
          "acrPassword": {
            "value": "PASSWORD"
          },
          "sqlServicePassword": {
            "value": "PASSWORD"
          },
          "mysqlPassword": {
            "value": "PASSWORD"
          },
          "domainAccountPassword": {
            "value": "PASSWORD"
          },
          "clusterSecret": {
            "value": "PASSWORD"
          },
          "splunkAdminPassword": {
            "value": "PASSWORD"
          },
          "vmAdminPasswordTrendDSM": {
            "value": "PASSWORD"
          },
          "vmAdminPasswordSplunkEnterprise": {
            "value": "PASSWORD"
          },
          "adminPasswordDSAgent": {
            "value": "PASSWORD"
          },
          "TrendAdminPassword": {
            "type": "string",
            "value": "PASSWORD"
          },
          "chefAutomateAdminPassword": {
            "type": "string",
            "value": "PASSWORD"
          },
          "sqlServerServiceAccountPassword": {
            "value": "PASSWORD"
          },
          "cmPassword": {
            "value": "PASSWORD"
          },
          "azureADApplicationSecret": {
            "value": "PASSWORD"
          },
          "machineSettings": {
            "value": {
              "adminUsername": "[variables('machineSettings').adminUsername]",
              "adminPassword": "PASSWORD",
              "machineNamePrefix": "[variables('machineSettings').machineNamePrefix]",
              "osImageReference": "[variables('machineSettings').osImageReference]",
              "vmSize": "[variables('clusterSpec').vmSizeMember]",
              "dataDiskSize": "[variables('clusterSpec').dataDiskSize]",
              "machineIndex": "[copyindex()]",
              "vmScripts": "[variables('vmScripts').scriptsToDownload]",
              "commandToExecute": "[variables('vmScripts').regularNodeInstallCommand]"
            }
          },
          "sharePointSetupUserAccountPassword": {
            "value": "PASSWORD"
          },
          "sharePointFarmAccountPassword": {
            "value": "PASSWORD"
          },
          "sharePointFarmPassphrasePassword": {
            "value": "PASSWORD"
          },
          "apigeeAdminPassword": {
            "value": "PASSWORD"
          },
          "cred1Password": {
            "value": "PASSWORD"
          },
          "sysgain_ms_password": {
            "value": "PASSWORD"
          },
          "informatica_user_password": {
            "value": "PASSWORD"
          },
          "sqlDWAdminPassword": {
            "value": "PASSWORD"
          },
          "administratorLoginPassword": {
            "value": "PASSWORD"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[variables('aksName')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[variables('aksDnsPrefix')]",
        "agentPoolProfiles": [],
        "linuxProfile": {},
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalAppId')]",
          "Secret": "SECRET"
        },
        "aadProfile": {
          "serverAppSecret": "PASSWORD"
        }
      }
    },
    {
      "apiVersion":"2019-04-01",
      "name":"[variables('agName')]",
      "type":"Microsoft.Network/applicationGateways",
      "location":"[parameters('location')]",
      "dependsOn":[],
      "properties":{
        "sku":{},
        "sslCertificates":[
          {
            "name":"[variables('agSslCertName')]",
            "properties":{
              "data":"[parameters('certificateBase64Encoded')]",
              "password":"PASSWORD"
            }
          }
        ],
        "gatewayIPConfigurations":[],
        "frontendIPConfigurations":[],
        "frontendPorts":[],
        "backendAddressPools":[],
        "backendHttpSettingsCollection":[],
        "httpListeners":[],
        "requestRoutingRules":[]       }
        },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "name": "[parameters('containerGroupName')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "properties": {
        "containers": [
          {
            "name": "[parameters('containerName')]",
            "properties": {
              "image": "cnabquickstartstest.azurecr.io/simongdavies/run-duffle:latest",
              "resources": {},
              "environmentVariables": [
                {
                  "name":"SQL_MASTERKEYPASSWORD",
                  "secureValue":"PASSWORD"
                },
                {
                  "name":"SQL_SAPASSWORD",
                  "secureValue":"PASSWORD"
                },
                {
                  "name": "AZURE_CLIENT_SECRET",
                  "secureValue": "PASSWORD"
                },
                {
                  "name": "WORDPRESS_DB_PASSWORD",
                  "value": "PASSWORD"
                },
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "PASSWORD"
                },
                {
                  "name": "password",
                  "value": "PASSWORD"
                }
              ]
            }
          }
        ],
        "volumes":[
          {
            "name":"[parameters('volumename')]",
            "secret":{
              "sslcertificateData":"[parameters('sslcertificateData')]",
              "sslcertificatePwd":"PASSWORD"
            }
          }
        ]
      }
    },
    {
      "apiVersion":"2016-09-30",
      "type":"Microsoft.ContainerService/containerServices",
      "location":"[parameters('location')]",
      "name":"[variables('kubernetesName')]",
      "properties":{
        "orchestratorProfile":{},
        "masterProfile":{},
        "agentPoolProfiles":[],
        "linuxProfile":{},
        "servicePrincipalProfile":{
          "ClientId":"[parameters('servicePrincipalAppId')]",
          "Secret":"PASSWORD"
        }
      }
    },
    {
      "name":"[parameters('dataFactoryName')]",
      "apiVersion":"2017-09-01-preview",
      "type":"Microsoft.DataFactory/factories",
      "location":"[parameters('dataFactoryLocation')]",
      "properties":{

      },
      "resources":[
        {
          "name":"[concat(parameters('dataFactoryName'), '/SPAzureSsisIR')]",
          "type":"Microsoft.DataFactory/factories/integrationRuntimes",
          "dependsOn":[],
          "apiVersion":"2017-09-01-preview",
          "properties":{
            "type":"Managed",
            "typeProperties":{
              "computeProperties":{},
              "ssisProperties":{
                "catalogInfo":{
                  "catalogServerEndpoint":"[parameters('azureSqlServerName')]",
                  "catalogAdminUserName":"[parameters('databaseAdminUserName')]",
                  "catalogAdminPassword":{
                    "type":"SecureString",
                    "value":"PASSWORD"
                  },
                  "catalogPricingTier":"[parameters('catalogPricingTier')]"
                }
              }
            }
          }
        },
        {
          "type":"linkedservices",
          "name":"[variables('ftpLinkedServiceName')]",
          "dependsOn":[],
          "apiVersion":"2015-10-01",
          "properties":{
            "type":"FtpServer",
            "typeProperties":{
              "host":"[parameters('ftpHost')]",
              "port":21,
              "authenticationType":"Basic",
              "username":"[parameters('ftpUser')]",
              "password":"PASSWORD",
              "enableSsl":false,
              "enableServerCertificateValidation":false
            }
          }
        }
      ]
    },
    {
      "name":"[parameters('clusterName')]",
      "type":"Microsoft.HDInsight/clusters",
      "location":"East US 2",
      "apiVersion":"2015-03-01-preview",
      "dependsOn":[],
      "tags":{},
      "properties":{
        "clusterVersion":"3.2",
        "osType":"Linux",
        "clusterDefinition":{
          "kind":"[parameters('clusterType')]",
          "configurations":{
            "gateway":{
              "restAuthCredential.isEnabled":true,
              "restAuthCredential.username":"[parameters('clusterLoginUserName')]",
              "restAuthCredential.password":"PASSWORD"
            },
            "clusterIdentity":{
              "clusterIdentity.applicationId":"[parameters('servicePrincipalApplicationId')]",
              "clusterIdentity.certificate":"[parameters('servicePrincipalCertificateContents')]",
              "clusterIdentity.certificatePassword":"PASSWORD",
              "clusterIdentity.aadTenantId":"[concat('https://login.windows.net/',parameters('aadTenantId'))]",
              "clusterIdentity.resourceUri":"https://management.core.windows.net/"
            },
            "hive-site":{
              "javax.jdo.option.ConnectionDriverName":"com.microsoft.sqlserver.jdbc.SQLServerDriver",
              "javax.jdo.option.ConnectionURL":"[concat('jdbc:sqlserver://', reference(resourceId(parameters('existingSQLServerResourceGroup'), 'Microsoft.Sql/servers', parameters('existingSQLServerName')), '2018-06-01-preview').fullyQualifiedDomainName, ';database=',parameters('newMetastoreDBName'),';encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300')]",
              "javax.jdo.option.ConnectionUserName":"[parameters('existingSQLServerUsername')]",
              "javax.jdo.option.ConnectionPassword":"PASSWORD"
            },
            "ambari-conf":{
              "database-server":"[reference(resourceId(parameters('existingSQLServerResourceGroup'),'Microsoft.Sql/servers',parameters('existingSQLServerName')), '2018-06-01-preview').fullyQualifiedDomainName]",
              "database-name":"[parameters('newMetastoreDBName')]",
              "database-user-name":"[parameters('existingSQLServerUsername')]",
              "database-user-password":"PASSWORD"
            }
          }
        },
        "storageProfile":{},
        "computeProfile":{
          "roles":[
            {
              "name":"headnode",
              "targetInstanceCount":2,
              "hardwareProfile":{
                "vmSize":"Standard_D3"
              },
              "osProfile":{
                "linuxOperatingSystemProfile":{
                  "username":"[parameters('sshUserName')]",
                  "password":"PASSWORD"
                }
              }
            },
            {
              "name":"workernode",
              "targetInstanceCount":"[parameters('clusterWorkerNodeCount')]",
              "hardwareProfile":{
                "vmSize":"Standard_D3"
              },
              "osProfile":{
                "linuxOperatingSystemProfile":{
                  "username":"[parameters('sshUserName')]",
                  "password":"PASSWORD"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type":"Microsoft.DBforMySQL/servers",
      "apiVersion":"2017-12-01",
      "location":"[parameters('location')]",
      "name":"[variables('serverName')]",
      "sku":{},
      "properties":{
        "version":"[parameters('mysqlVersion')]",
        "administratorLogin":"[parameters('administratorLogin')]",
        "administratorLoginPassword":"PASSWORD",
        "storageProfile":{},
        "sslEnforcement":"Disabled"
      },
      "resources":[]
    },
    {
      "type":"Microsoft.DBforPostgreSQL/servers",
      "apiVersion":"2017-12-01",
      "location":"[parameters('location')]",
      "name":"[variables('serverName')]",
      "sku":{},
      "properties":{
        "version":"[parameters('mysqlVersion')]",
        "administratorLogin":"[parameters('administratorLogin')]",
        "administratorLoginPassword":"PASSWORD",
        "storageProfile":{},
        "sslEnforcement":"Disabled"
      },
      "resources":[]
    },
    {
      "type":"Microsoft.KeyVault/vaults",
      "apiVersion":"2018-02-14",
      "name":"[variables('keyVaultName')]",
      "location":"[parameters('location')]",
      "resources":[
        {
          "type":"secrets",
          "name":"VMPassword",
          "apiVersion":"2018-02-14",
          "dependsOn":[
            "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
          ],
          "properties":{
            "value":"PASSWORD"
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "PASSWORD"
      }
    },
    {
      "type":"Microsoft.Web/connections",
      "apiVersion":"2018-07-01-preview",
      "location":"[parameters('location')]",
      "name":"[parameters('ftpConnectionName')]",
      "properties":{
        "api":{},
        "displayName":"ftp",
        "parameterValues":{
          "serverAddress":"[parameters('ftpServerAddress')]",
          "userName":"[parameters('ftpUsername')]",
          "password":"PASSWORD",
          "serverPort":"[parameters('ftpServerPort')]",
          "isssl":"[variables('ftpisssl')]",
          "isBinaryTransport":"[variables('ftpisBinaryTransportftpisssl')]",
          "disableCertificateValidation":"[variables('ftpdisableCertificateValidation')]"
        }
      }
    },
    {
      "type":"Microsoft.Logic/workflows",
      "apiVersion":"2017-07-01",
      "name":"[parameters('logicAppName')]",
      "location":"[parameters('location')]",
      "dependsOn":[],
      "properties":{
        "definition":{
          "$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion":"1.0.0.0",
          "parameters":{
            "clientSecret":{
              "type":"SecureString",
              "defaultValue":"parameters("
            }
          },
          "triggers":{},
          "actions":{
            "pingSite":{
              "type":"Http",
              "inputs":{
                "uri":"[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).hostNames[0])]",
                "method":"Get",
                "authentication":{
                  "type":"ActiveDirectoryOAuth",
                  "tenant":"[parameters('tenantId')]",
                  "audience":"[parameters('webAppClientId')]",
                  "clientId":"[parameters('logicAppClientId')]",
                  "secret":"PASSWORD"
                }
              }
            }
          },
          "outputs":{}
        },
        "parameters":{
          "clientSecret":{
            "value":"PASSWORD"
          }
        }
      }
    },
    {
      "type":"Microsoft.Sql/managedInstances",
      "apiVersion":"2018-06-01-preview",
      "dependsOn":[],
      "identity":{},
      "location":"[parameters('location')]",
      "name":"[parameters('managedInstanceName')]",
      "sku":{},
      "properties":{
        "administratorLogin":"[parameters('administratorLogin')]",
        "administratorLoginPassword":"PASSWORD",
        "subnetId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "storageSizeInGB":"[parameters('storageSizeInGB')]",
        "vCores":"[parameters('vCores')]",
        "licenseType":"[parameters('licenseType')]"
      }
    },
    {
      "name":"[concat(parameters('automationAccountName'), '/', variables('automation').Asset.omsHypervReplicaRunAsAccount.name)]",
      "type":"microsoft.automation/automationAccounts/credentials",
      "apiVersion":"2015-10-31",
      "location":"[parameters('automationRegion')]",
      "dependsOn":[],
      "tags":{},
      "properties":{
        "userName":"[parameters('onPremisesRunAsUserName')]",
        "password":"PASSWORD",
        "description":"[variables('automation').Asset.omsHypervReplicaRunAsAccount.description]"
      }
    }
    ],
  "contentVersion":"",
  "parameters":{

  }
}

{
  "apiVersion": "2015-08-01",
  "type": "Microsoft.Web/certificates",
  "name": "[parameters('certificateName')]",
  "location": "[parameters('existingAseLocation')]",
  "properties": {
    "pfxBlob": "[parameters('pfxBlobString')]",
    "password": "PASSWORD",
    "keyVaultSecretName":"PASSWORD",
    "hostingEnvironmentProfile": {
      "id": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('appServiceEnvironmentName'))]"
    }
  }
}
